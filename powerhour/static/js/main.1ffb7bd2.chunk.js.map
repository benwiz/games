{"version":3,"sources":["util.js","App.js","serviceWorker.js","index.js"],"names":["util","spotify","cookies","Cookies","window","location","hash","length","querystring","slice","query","QueryString","parse","access_token","set","maxAge","href","split","spotifyAccessToken","get","setAccessToken","scopes","encodeURIComponent","redirect_uri","url","concat","theme","createMuiTheme","palette","primary","main","secondary","typography","useNextVariants","Spotify","Util","GameLengthSelect","state","labelWidth","render","style","display","_this","props","gameHasStarted","react_default","a","createElement","FormControl_default","className","variant","InputLabel_default","ref","InputLabelRef","htmlFor","Select_default","native","value","onChange","input","OutlinedInput_default","name","id","this","setState","ReactDOM","findDOMNode","offsetWidth","React","Component","ShotIntervalSelect","_this2","DeviceSelect","devices","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","device","option","key","push","err","return","_this4","createOptions","StartButton","text","_this5","gameIsPaused","Fab_default","color","onClick","Icon_default","Timer","minutes","_this6","toString","padStart","seconds","TrackInformation","src","_this7","albumImage","alt","albumName","width","height","songName","artists","RestartButton","styles","visibility","marginTop","marginBottom","Button_default","size","Config","App_GameLengthSelect","_this8","gameLengthMinutes","gameLengthSelectChangeHandler","App_ShotIntervalSelect","shotIntervalSeconds","shotIntervalSelectChangeHandler","App_DeviceSelect","currentDeviceID","deviceSelectChangeHandler","Game","App_StartButton","_this9","startButtonClickHandler","App_Timer","App_TrackInformation","App_RestartButton","restartButtonClickHandler","Footer","IconButton_default","SvgIcon_default","viewBox","d","App","_this11","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getInitialState","gameHasEnded","tickIntervalID","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","_ref5","_ref6","wrap","_context","prev","Promise","all","getMyDevices","getMyCurrentPlaybackState","sent","slicedToArray","setInterval","getDevices","getCurrentTrack","stop","_callee2","_ref8","_context2","_callee3","result","i","artist","_context3","getMyCurrentPlayingTrack","is_playing","item","album","images","event","target","_ref10","_callee4","_context4","transferMyPlayback","_x","apply","arguments","_callee5","intervalID","_context5","tick","play","device_id","pause","skipToNext","clearInterval","backgroundImage","core_styles","App_Config","App_Game","App_Footer","Boolean","hostname","match","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ffb7bd2.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\nimport QueryString from 'querystring';\n\nconst setupSpotify = spotify => {\n  const cookies = new Cookies();\n\n  // Get access token from Spotify implicit grant flow redirect callback, and set cookie\n  if (window.location.hash.length > 1) {\n    const querystring = window.location.hash.slice(1);\n    const query = QueryString.parse(querystring);\n    if (query.access_token) {\n      cookies.set('spotify-access-token', query.access_token, { maxAge: 3595 });\n      // Final redirect to remove the hash, not really necessary, but url looks nicer\n      window.location = window.location.href.split('#')[0];\n    }\n  }\n\n  // Get token from cookie and use it to set up Spotify client, if not start the implicit grant flow\n  const spotifyAccessToken = cookies.get('spotify-access-token');\n  if (spotifyAccessToken) {\n    spotify.setAccessToken(spotifyAccessToken);\n  } else {\n    const client_id = 'ff53948d58f1491baa6169d34bc4179a';\n    const scopes = encodeURIComponent(\n      'user-read-playback-state user-modify-playback-state'\n    );\n    const redirect_uri = window.location.href;\n    const url = `https://accounts.spotify.com/authorize?response_type=token&client_id=${client_id}&scope=${scopes}&redirect_uri=${redirect_uri}`;\n    window.location = url;\n  }\n};\n\nexport default { setupSpotify };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport Icon from '@material-ui/core/Icon';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nimport Spotify from 'spotify-web-api-js';\nimport Util from './util';\nimport './App.css';\n\n// Set theme color\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#91ddfc',\n    },\n    secondary: {\n      main: '#fcaf91',\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\n// Set up Spotify. This must execute immediately incase a redirect is necessary.\n// There is maybe a better practice for where this function should be called.\nconst spotify = new Spotify();\nUtil.setupSpotify(spotify);\n\nclass GameLengthSelect extends React.Component {\n  state = {\n    labelWidth: 0,\n  };\n\n  componentDidMount() {\n    this.setState({\n      labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth,\n    });\n  }\n\n  render = () => {\n    const style = {\n      display: this.props.gameHasStarted ? 'none' : 'default',\n    };\n\n    return (\n      <FormControl\n        className=\"select-form-control\"\n        variant=\"outlined\"\n        style={style}\n      >\n        <InputLabel\n          ref={ref => {\n            this.InputLabelRef = ref;\n          }}\n          htmlFor=\"game-length\"\n        >\n          Game Length\n        </InputLabel>\n        <Select\n          native\n          value={this.props.value}\n          onChange={this.props.onChange}\n          className=\"config-select\"\n          input={\n            <OutlinedInput\n              labelWidth={this.state.labelWidth}\n              name=\"game-length\"\n              id=\"game-length\"\n            />\n          }\n        >\n          <option value={10}>10 minutes</option>\n          <option value={20}>20 minutes</option>\n          <option value={30}>30 minutes</option>\n          <option value={40}>40 minutes</option>\n          <option value={50}>50 minutes</option>\n          <option value={60}>60 minutes</option>\n          <option value={70}>70 minutes</option>\n          <option value={80}>80 minutes</option>\n          <option value={90}>90 minutes</option>\n        </Select>\n      </FormControl>\n    );\n  };\n}\n\nclass ShotIntervalSelect extends React.Component {\n  state = {\n    labelWidth: 0,\n  };\n\n  componentDidMount() {\n    this.setState({\n      labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth,\n    });\n  }\n\n  render = () => {\n    return (\n      <FormControl className=\"select-form-control\" variant=\"outlined\">\n        <InputLabel\n          ref={ref => {\n            this.InputLabelRef = ref;\n          }}\n          htmlFor=\"shot-interval\"\n        >\n          Shot Interval\n        </InputLabel>\n        <Select\n          native\n          value={this.props.value}\n          onChange={this.props.onChange}\n          className=\"config-select\"\n          input={\n            <OutlinedInput\n              labelWidth={this.state.labelWidth}\n              name=\"shot-interval\"\n              id=\"shot-interval\"\n            />\n          }\n        >\n          <option value={30}>30 seconds</option>\n          <option value={60}>60 seconds</option>\n          <option value={90}>90 seconds</option>\n          <option value={120}>120 seconds</option>\n          <option value={150}>150 seconds</option>\n          <option value={180}>180 seconds</option>\n        </Select>\n      </FormControl>\n    );\n  };\n}\n\nclass DeviceSelect extends React.Component {\n  state = {\n    labelWidth: 0,\n  };\n\n  componentDidMount() {\n    if (this.props.devices.length > 0) {\n    this.setState({\n      labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth,\n    });\n   }\n  }\n\n  createOptions() {\n    const options = [];\n    for (const device of this.props.devices) {\n      const option = (\n        <option key={device.id} value={device.id}>\n          {device.name}\n        </option>\n      );\n      options.push(option);\n    }\n    return options;\n  }\n\n  render() {\n    let component;\n    if (this.props.devices.length > 0) {\n    component = (\n      <FormControl className=\"select-form-control\" variant=\"outlined\">\n        <InputLabel\n          ref={ref => {\n            this.InputLabelRef = ref;\n          }}\n          htmlFor=\"device\"\n        >\n          Device\n        </InputLabel>\n        <Select\n          native\n          value={this.props.value}\n          onChange={this.props.onChange}\n          className=\"config-select\"\n          input={\n            <OutlinedInput\n              labelWidth={this.state.labelWidth}\n              name=\"device\"\n              id=\"device\"\n            />\n          }\n        >\n          {this.createOptions()}\n        </Select>\n      </FormControl>\n    );\n    } else {\n        component = <p>Open Spotify on this or another device</p>;\n    }\n\n    return component;\n  }\n}\n\nclass StartButton extends React.Component {\n  render = () => {\n    const text = this.props.gameHasStarted\n      ? this.props.gameIsPaused\n        ? 'play_arrow'\n        : 'pause'\n      : 'play_arrow';\n    return (\n      <Fab variant=\"round\" color=\"primary\" onClick={this.props.onClick}>\n        <Icon>{text}</Icon>\n      </Fab>\n    );\n  };\n}\n\nclass Timer extends React.Component {\n  render = () => {\n    const minutes = this.props.minutes.toString().padStart(2, '0');\n    const seconds = this.props.seconds.toString().padStart(2, '0');\n    return (\n      <span className=\"timer\">\n        {minutes}:{seconds}\n      </span>\n    );\n  };\n}\n\nclass TrackInformation extends React.Component {\n  render = () => {\n    return (\n      <div className=\"track-information\">\n        <img\n          src={this.props.albumImage}\n          alt={this.props.albumName}\n          width=\"175\"\n          height=\"175\"\n        />\n        <p className=\"song-name\">{this.props.songName}</p>\n        <p className=\"artists\">{this.props.artists}</p>\n      </div>\n    );\n  };\n}\n\nclass RestartButton extends React.Component {\n  render() {\n    const styles = {\n      visibility: this.props.gameHasStarted ? 'visible' : 'hidden',\n      marginTop: '12px',\n      marginBottom: '12px',\n    };\n\n    return (\n      <Button\n        variant=\"outlined\"\n        color=\"secondary\"\n        size=\"small\"\n        style={styles}\n        onClick={this.props.onClick}\n      >\n        Restart\n      </Button>\n    );\n  }\n}\n\nclass Config extends React.Component {\n  render = () => {\n    return (\n      <div className=\"config\">\n        <GameLengthSelect\n          value={this.props.gameLengthMinutes}\n          onChange={this.props.gameLengthSelectChangeHandler}\n          gameHasStarted={this.props.gameHasStarted}\n        />\n        <ShotIntervalSelect\n          value={this.props.shotIntervalSeconds}\n          onChange={this.props.shotIntervalSelectChangeHandler}\n        />\n        <DeviceSelect\n          value={this.props.currentDeviceID}\n          onChange={this.props.deviceSelectChangeHandler}\n          devices={this.props.devices}\n        />\n      </div>\n    );\n  };\n}\n\nclass Game extends React.Component {\n  render = () => {\n    return (\n      <div className=\"game\">\n        <StartButton\n          onClick={this.props.startButtonClickHandler}\n          gameHasStarted={this.props.gameHasStarted}\n          gameIsPaused={this.props.gameIsPaused}\n        />\n        <Timer minutes={this.props.minutes} seconds={this.props.seconds} />\n        <TrackInformation\n          songName={this.props.songName}\n          artists={this.props.artists}\n          albumImage={this.props.albumImage}\n          albumName={this.props.albumName}\n        />\n        <RestartButton\n          onClick={this.props.restartButtonClickHandler}\n          gameHasStarted={this.props.gameHasStarted}\n        />\n      </div>\n    );\n  };\n}\n\nclass Footer extends React.Component {\n  render = () => {\n    return (\n      <div className=\"footer\">\n        <IconButton onClick={() => window.href='https://benwiz.io/'}>\n          <Icon>home</Icon>\n        </IconButton>\n        <IconButton onClick={() => window.href='https://github.com/benwiz/games/'}>\n          <SvgIcon viewBox={'0 0 16 16'}>\n            <path\n              // fill-rule=\"evenodd\"\n              d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n            />\n          </SvgIcon>\n        </IconButton>\n      </div>\n    );\n  };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Set initial state\n    this.state = this.getInitialState();\n  }\n\n  getInitialState = () => {\n    return {\n      // Configs\n      gameLengthMinutes: 60,\n      shotIntervalSeconds: 60,\n      // Other, unsorted stuff\n      minutes: 60, // NOTE: Must match gameLengthMinutes\n      seconds: 0,\n      devices: [],\n      currentDeviceID: '',\n      gameIsPaused: true,\n      gameHasStarted: false,\n      gameHasEnded: false,\n      tickIntervalID: null,\n      songName: null,\n      artists: null,\n      albumImage: null,\n      albumName: null,\n    };\n  };\n\n  componentDidMount = async () => {\n    // Load data from Spotify\n    const [{ devices }, { device }] = await Promise.all([\n      spotify.getMyDevices(),\n      spotify.getMyCurrentPlaybackState(),\n    ]);\n    this.setState({ devices, currentDeviceID: device ? device.id : '' });\n\n    // Keep an eye on available devices\n    setInterval(() => this.getDevices(), 5000);\n\n    // Keep an eye on current track and play status\n    setInterval(() => this.getCurrentTrack(), 900);\n  };\n\n  getDevices = async () => {\n    const { devices } = await spotify.getMyDevices();\n    this.setState({ devices });\n  };\n\n  getCurrentTrack = async () => {\n    const result = await spotify.getMyCurrentPlayingTrack();\n\n    // Only update gameIsPaused if the game is started\n    let gameIsPaused = this.state.gameIsPaused;\n    if (this.state.gameHasStarted) {\n      gameIsPaused = !result.is_playing;\n    }\n\n    // Always update track info\n    const songName = result.item ? result.item.name : '';\n    let artists = '';\n    if (result.item && result.item.artists) {\n      for (let i = 0; i < result.item.artists.length; i++) {\n        const artist = result.item.artists[i];\n        artists += artist.name;\n        if (i < result.item.artists.length - 1) {\n          artists += ', ';\n        }\n      }\n    }\n    const albumImage = result.item ? result.item.album.images[0].url : ''; // TODO: Change index to 1 for a smaller image\n    let albumName = '';\n    if (result && result.item && result.item.album && result.item.album.name) {\n      albumName = result.item.album.name;\n    }\n\n    // Update the state\n    this.setState({ gameIsPaused, songName, artists, albumImage, albumName });\n  };\n\n  gameLengthSelectChangeHandler = event => {\n    const gameLengthMinutes = event.target.value;\n    const minutes = gameLengthMinutes;\n    this.setState({ gameLengthMinutes, minutes });\n  };\n\n  shotIntervalSelectChangeHandler = event => {\n    const shotIntervalSeconds = event.target.value;\n    this.setState({ shotIntervalSeconds });\n  };\n\n  deviceSelectChangeHandler = async event => {\n    // Update the state\n    this.setState({ currentDeviceID: event.target.value });\n    // Switch Spotify play to selected device\n    await spotify.transferMyPlayback([event.target.value]);\n  };\n\n  startButtonClickHandler = async () => {\n    // If the game has not yet started, start the game\n    if (!this.state.gameHasStarted) {\n      const intervalID = setInterval(() => this.tick(), 1000);\n      this.setState({ gameHasStarted: true, tickIntervalID: intervalID });\n    }\n\n    if (this.state.gameIsPaused) {\n      // Pause Spotify using the selected device\n      await spotify.play({ device_id: this.state.currentDeviceID });\n    } else {\n      // Play Spotify using the selected device\n      await spotify.pause();\n    }\n  };\n\n  tick = () => {\n    // If the game is not active, exit the function\n    if (this.state.gameIsPaused) {\n      return;\n    }\n\n    // Update the counter\n    let seconds = this.state.seconds - 1;\n    let minutes = this.state.minutes;\n    if (seconds < 0) {\n      seconds = 59;\n      minutes -= 1;\n    }\n    this.setState({ seconds, minutes });\n\n    // Skip to next track if shotIntervalSeconds has passed since the last shot\n    const ellapsedMinutes = this.state.gameLengthMinutes - this.state.minutes;\n    const ellapsedSeconds = 60 * ellapsedMinutes + (60 - this.state.seconds);\n    const timeForShot =\n      ellapsedSeconds % this.state.shotIntervalSeconds === 0 || // Interval\n      (minutes === 0 && seconds === 0); // End of game\n    if (timeForShot) {\n      spotify.skipToNext();\n      // TODO: Maybe play a sound\n    }\n\n    // If game is over, update the state to say so\n    if (minutes === 0 && seconds === 0) {\n      this.setState({ gameHasEnded: true });\n      clearInterval(this.state.tickIntervalID);\n    }\n  };\n\n  restartButtonClickHandler = () => {\n    // // Stop tick interval\n    // clearInterval(this.state.tickIntervalID);\n    // // Reset state\n    // const state = this.getInitialState();\n    // // TODO: Overwrite state with configs from this.state so that the settings\n    // // are not lost.\n    // this.setState(state);\n    // // Call component did mount again\n    // this.componentDidMount();\n\n    // For now, just reload the page\n    window.location = window.location.href;\n  };\n\n  render = () => {\n    const style = { backgroundImage: `url(${this.state.albumImage})` };\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className=\"App\" style={style}>\n          <div className=\"dimmer\">\n            <div className=\"container\">\n              <h2>Power Hour</h2>\n              <Config\n                gameHasStarted={this.state.gameHasStarted}\n                gameLengthMinutes={this.state.gameLengthMinutes}\n                gameLengthSelectChangeHandler={\n                  this.gameLengthSelectChangeHandler\n                }\n                shotIntervalSeconds={this.state.shotIntervalSeconds}\n                shotIntervalSelectChangeHandler={\n                  this.shotIntervalSelectChangeHandler\n                }\n                currentDeviceID={this.state.currentDeviceID}\n                deviceSelectChangeHandler={this.deviceSelectChangeHandler}\n                devices={this.state.devices}\n              />\n              <Game\n                startButtonClickHandler={this.startButtonClickHandler}\n                gameHasStarted={this.state.gameHasStarted}\n                gameIsPaused={this.state.gameIsPaused}\n                minutes={this.state.minutes}\n                seconds={this.state.seconds}\n                songName={this.state.songName}\n                artists={this.state.artists}\n                albumImage={this.state.albumImage}\n                albumName={this.state.albumName}\n                restartButtonClickHandler={this.restartButtonClickHandler}\n              />\n              <Footer />\n            </div>\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}